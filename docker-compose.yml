version: '3.9'

networks:
  product-network:

volumes:
  pgdata:

services:
  db:
    image: postgres:14.6-alpine
    container_name: diplom_db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}" ]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./logs:/var/diplom_log
    env_file:
      - ./.env
    networks:
      product-network:

  shops:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: diplom_shops
    ports:
      - "8001:8001"
    networks:
      product-network:
    depends_on:
      - db
    env_file:
      - ./.env
    volumes:
      - ./backend/:/backend
      - ./netology_pd_diplom/:/netology_pd_diplom

  redis:
    image: redis:7.0.0-alpine3.15
    container_name: diplom_redis
    expose:
      - 6379
    networks:
      product-network:

  celery:
      container_name: diplom_celery
      restart: always
      build:
        context: .
        dockerfile: Dockerfile.celery
      depends_on:
        - db
        - redis
      networks:
        product-network:
      env_file:
        - ./.env

  tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    container_name: diplom_tests
    networks:
      product-network:
    depends_on:
      - db
      - shops
      - celery
    env_file:
      - ./.env
    volumes:
      - ./tests:/tests


